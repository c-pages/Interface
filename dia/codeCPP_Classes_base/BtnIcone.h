#ifndef BTNICONE__H
#define BTNICONE__H

/////////////////////////////////////////////////
// Headers
/////////////////////////////////////////////////
#include "gui.h"



namespace gui {

/////////////////////////////////////////////////
/// \brief ( icone ou texte )
///
/////////////////////////////////////////////////
class BtnIcone : public gui::Bouton {
    
    /////////////////////////////////////////////////
    // Les methodes
    /////////////////////////////////////////////////
    
public:
    BtnIcone (ptr parent);

    BtnIcone (ptr parent, string texte);

    /////////////////////////////////////////////////
    /// \brief  
    ///
    /// \param parent		 
    /// \param icone		 
    /////////////////////////////////////////////////
    BtnIcone (ptr parent, sf::Texture icone);

    /////////////////////////////////////////////////
    /// \brief  
    ///
    /// \param etat		 le nouvel etat
    /////////////////////////////////////////////////
    void setEtat (Etat etat);

    void setTexte (std::string texte);

    /////////////////////////////////////////////////
    /// \brief  
    ///
    /// \param icone		 La texture qui servira d'icone.
    /////////////////////////////////////////////////
    void setIcone (const sf::Texture* icone);

    virtual void actualiser ();

    virtual void traiter_evenements (const sf::Event& evenement);

private:
    virtual void init ();

    virtual void init_skin ();

    /////////////////////////////////////////////////
    /// \brief  
    ///
    /////////////////////////////////////////////////
    virtual void init_interactions ();

    /////////////////////////////////////////////////
    /// \brief  
    ///
    /////////////////////////////////////////////////
    virtual void actualiser_bounds ();

    
    /////////////////////////////////////////////////
    // Les membres
    /////////////////////////////////////////////////
    
private:
    EtatBouton m_etat;    ///<   ( inactif , repos, survol, presse  )    
    sf::Clock m_clock_dblClique;    
    bool m_1erClick;    ///<       
    shared_ptr<Label> m_label;    
    shared_ptr<Image> m_icone;    
    shared_ptr<Bouton> m_bouton;    ///<       
};

} // fin namespace gui

#endif


////////////////////////////////////////////////////////////
/// class BtnIcone
/// ingroup 
///
/// see 
///
////////////////////////////////////////////////////////////
